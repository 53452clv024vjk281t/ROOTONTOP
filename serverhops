local desiredVersion = "1681" -- You can still use this for webhook info
local PlaceId = game.PlaceId

-- SERVICES
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local Player = Players.LocalPlayer

-- Clipboard compatibility
local setclipboard = setclipboard or toclipboard or (Clipboard and Clipboard.set)

-- Wait until game is fully loaded before continuing
repeat
    task.wait(0.1)
until game:IsLoaded()

-- Wait extra 5 seconds before continuing
task.wait(5)

-- UI SETUP
local function createLoadingUI()
    local gui = Instance.new("ScreenGui")
    gui.Name = "ServerHopUI"
    gui.ResetOnSpawn = false
    gui.Parent = Player:WaitForChild("PlayerGui")

    local bg = Instance.new("Frame")
    bg.Size = UDim2.new(1, 0, 1, 0)
    bg.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    bg.BackgroundTransparency = 0.3
    bg.Parent = gui

    local statusLabel = Instance.new("TextLabel")
    statusLabel.Name = "StatusLabel"
    statusLabel.Size = UDim2.new(1, 0, 0, 60)
    statusLabel.Position = UDim2.new(0, 0, 0.4, 0)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Text = "üîÑ Loading..."
    statusLabel.Font = Enum.Font.SourceSansBold
    statusLabel.TextSize = 32
    statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    statusLabel.TextStrokeTransparency = 0.5
    statusLabel.Parent = bg

    local versionLabel = Instance.new("TextLabel")
    versionLabel.Name = "VersionLabel"
    versionLabel.Size = UDim2.new(1, 0, 0, 40)
    versionLabel.Position = UDim2.new(0, 0, 0.45, 0)
    versionLabel.BackgroundTransparency = 1
    versionLabel.Text = "Running Speed Hub X..."
    versionLabel.Font = Enum.Font.SourceSans
    versionLabel.TextSize = 24
    versionLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    versionLabel.TextStrokeTransparency = 0.5
    versionLabel.Parent = bg

    local creditsLabel = Instance.new("TextLabel")
    creditsLabel.Name = "CreditsLabel"
    creditsLabel.Size = UDim2.new(1, 0, 0, 40)
    creditsLabel.Position = UDim2.new(0, 0, 0.9, 0)
    creditsLabel.BackgroundTransparency = 1
    creditsLabel.Text = "Credits: mimicccccc1#2347"
    creditsLabel.Font = Enum.Font.SourceSansItalic
    creditsLabel.TextSize = 24
    creditsLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    creditsLabel.TextStrokeTransparency = 0.7
    creditsLabel.Parent = bg

    return gui, statusLabel, versionLabel
end

local gui, statusLabel, versionLabel = createLoadingUI()

-- FUNCTION: Copy Job ID to clipboard
local function copyJobId()
    if setclipboard then
        setclipboard(game.JobId)
        print("[‚úì] Job ID copied: " .. game.JobId)
    else
        warn("Clipboard function not supported.")
    end
end

-- FUNCTION: Send webhook with job info
local function sendWebhook()
    local webhookUrl = "https://discord.com/api/webhooks/1403212302605357088/iqWgOYegTK5wOyc_yspDLA2HglemNCckSpLcsun76id0AtotHuotJBET4wHwl1R_vb-M"
    local players = #Players:GetPlayers()
    local maxPlayers = Players.MaxPlayers or 0
    local currentVersion = tostring(version()):match("%d+") or "Unknown" -- Roblox client version
    local currentPlaceVersion = tostring(game.PlaceVersion or "Unknown") -- Place (game) version

    -- Decide color: red if version mismatch, green otherwise
    local isCorrectVersion = currentVersion == desiredVersion
    local embedColor = isCorrectVersion and 0x00FF00 or 0xFF0000

    -- Update GUI color and text
    versionLabel.TextColor3 = isCorrectVersion and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
    versionLabel.Text = "Version Check: " .. currentVersion .. " (Expected: " .. desiredVersion .. ")"

    local embed = {
        title = "Speed Hub Joined Server",
        description = string.format(
            "**Desired Version:** %s\n" ..
            "**Current Client Version:** %s\n" ..
            "**Current Place Version:** %s\n\n" ..
            "**Players:** %d/%d\n\n" ..
            "**Job ID:** `%s`\n\n" ..
            "**Teleport Code:**\n```lua\n" ..
            "game:GetService(\"TeleportService\"):TeleportToPlaceInstance(%d, \"%s\", game:GetService(\"Players\").LocalPlayer)\n```",
            desiredVersion,
            currentVersion,
            currentPlaceVersion,
            players, maxPlayers,
            game.JobId,
            PlaceId,
            game.JobId
        ),
        color = embedColor,
        footer = { text = "Auto Speed Hub Loader" }
    }

    local data = HttpService:JSONEncode({ embeds = { embed } })

    pcall(function()
        HttpService:RequestAsync({
            Url = webhookUrl,
            Method = "POST",
            Headers = { ["Content-Type"] = "application/json" },
            Body = data,
        })
    end)
end

-- FUNCTION: Server hop to a random public server
local function tryServerHop()
    local servers = {}
    local cursor = nil

    repeat
        local url = "https://games.roblox.com/v1/games/"..PlaceId.."/servers/Public?sortOrder=Asc&limit=100"
        if cursor then
            url = url .. "&cursor=" .. cursor
        end

        local success, response = pcall(function()
            return HttpService:JSONDecode(game:HttpGet(url))
        end)

        if success and response and response.data then
            for _, server in pairs(response.data) do
                if server.playing < server.maxPlayers and server.id ~= game.JobId then
                    table.insert(servers, server.id)
                end
            end
            cursor = response.nextPageCursor
        else
            warn("-- Failed to get server list.")
            return false
        end
    until not cursor or #servers >= 50

    if #servers > 0 then
        local randomServerId = servers[math.random(1, #servers)]
        statusLabel.Text = "üîÅ Hopping to new server..."
        TeleportService:TeleportToPlaceInstance(PlaceId, randomServerId, Player)
        return true
    else
        warn("-- No servers found to hop.")
        return false
    end
end

-- MAIN
task.spawn(function()
    -- Show status
    statusLabel.Text = "‚úÖ Speed Hub X executing..."
    print("[‚úì] Executing Speed Hub X...")

    -- Execute the Speed Hub X script (always)
    loadstring(game:HttpGet("https://raw.githubusercontent.com/AhmadV99/Speed-Hub-X/main/Speed%20Hub%20X.lua", true))()

    -- Copy Job ID and send webhook
    copyJobId()
    sendWebhook()

    -- Optional: Hop servers after short delay
    task.wait(10) -- Wait before hopping, let Speed Hub load
    tryServerHop()
end)
