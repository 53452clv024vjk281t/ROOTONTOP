local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Backpack = LocalPlayer:WaitForChild("Backpack")
local Humanoid = Character:WaitForChild("Humanoid")

local targetUsername = "patpiggy195" -- change to your desired trade target

-- Helper: find Trading Ticket Tool
local function findTradingTicket()
    -- search Backpack
    local ticket = Backpack:FindFirstChild("Trading Ticket")
    if ticket and ticket:IsA("Tool") then
        return ticket
    end

    -- search Character too, in case equipped already
    ticket = Character:FindFirstChild("Trading Ticket")
    if ticket and ticket:IsA("Tool") then
        return ticket
    end

    return nil
end

-- Equip trading ticket function
local function equipTradingTicket()
    local ticket = findTradingTicket()
    if ticket then
        Humanoid:EquipTool(ticket)
        print("[+] Equipped Trading Ticket")
        return true
    else
        warn("[!] Trading Ticket not found in Backpack or Character")
        return false
    end
end

-- Fire proximity prompt to send trade request
local function sendTradeRequest(targetPlayer)
    if not targetPlayer then
        warn("[!] Target player not found")
        return false
    end

    local targetCharacter = targetPlayer.Character or targetPlayer.CharacterAdded:Wait()
    local targetHRP = targetCharacter:FindFirstChild("HumanoidRootPart")
    if not targetHRP then
        warn("[!] Target HumanoidRootPart not found")
        return false
    end

    -- Find the ProximityPrompt to send trade request
    local prompt = targetHRP:FindFirstChildOfClass("ProximityPrompt")
    if not prompt then
        warn("[!] Target ProximityPrompt not found")
        return false
    end

    -- Fire the prompt to send trade request
    prompt.HoldDuration = 0.2 -- fast trigger
    fireproximityprompt(prompt)
    print("[+] Trade request sent")
    return true
end

-- Placeholder: place all pets/fruits function
local function placeAllPetsAndFruits()
    print("[*] Placing all pets and fruits...")

    -- This part needs customization depending on your game logic.
    -- Example: iterate inventory tools and place in garden.
    -- We'll do a simple print for demonstration:

    for _, tool in ipairs(Backpack:GetChildren()) do
        if tool:IsA("Tool") then
            print("Placing item:", tool.Name)
            -- Place your logic here to equip/place pets and fruits
            -- For example:
            -- Humanoid:EquipTool(tool)
            -- fireproximityprompt or other placement function
            wait(0.3) -- small delay to avoid spam
        end
    end

    print("[*] All items processed.")
end

-- Main flow
local function main()
    -- Wait for character & backpack to load fully
    if not Character or not Humanoid or not Backpack then
        warn("[!] Character, Humanoid or Backpack missing!")
        return
    end

    -- Find target player
    local targetPlayer = Players:FindFirstChild(targetUsername)
    if not targetPlayer then
        warn("[!] Target player '" .. targetUsername .. "' not found in server")
        return
    end

    -- Equip Trading Ticket
    local equipped = equipTradingTicket()
    if not equipped then return end

    wait(0.5)

    -- Teleport or move to target player HumanoidRootPart position (optional)
    local targetHRP = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")
    if targetHRP and Character.PrimaryPart then
        Character:SetPrimaryPartCFrame(targetHRP.CFrame * CFrame.new(0, 0, 3)) -- small offset
        wait(0.3)
    end

    -- Send trade request
    local tradeSent = sendTradeRequest(targetPlayer)
    if not tradeSent then return end

    wait(1) -- wait for trade UI to pop up (customize timing)

    -- Place all pets/fruits
    placeAllPetsAndFruits()
end

-- Run main
main()
